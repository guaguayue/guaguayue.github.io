[
  
  {
    "title"    : "记录遇到过的http状态码",
    "category" : "",
    "tags"     : " http",
    "url"      : "/2021/07/02/http2.html",
    "date"     : "July 2, 2021",
    "excerpt"  : "http的状态码标记在响应报文的响应首部的响应行中，http状态码有约40种左右  ，这里记录我开发过程中遭遇的部分常用状态码\n\nhttp状态码的类别\n\n一般情况下http的状态码首位数字代表着状态所在的请求阶段（当然也有例外）。而且随着http协议的发展，有一些状态码正在慢慢被取消使用。\n\n\n  1xx：请求正在处理（请求正在处理）\n  2xx：正常处理完毕（成功）\n  3xx：需要附加操作来完成请求（重定向，请求没有成功）\n  4xx：服务器无法处理请求（客户端错误请求的过程有一些问题...",
  "content"  : "http的状态码标记在响应报文的响应首部的响应行中，http状态码有约40种左右  ，这里记录我开发过程中遭遇的部分常用状态码\n\nhttp状态码的类别\n\n一般情况下http的状态码首位数字代表着状态所在的请求阶段（当然也有例外）。而且随着http协议的发展，有一些状态码正在慢慢被取消使用。\n\n\n  1xx：请求正在处理（请求正在处理）\n  2xx：正常处理完毕（成功）\n  3xx：需要附加操作来完成请求（重定向，请求没有成功）\n  4xx：服务器无法处理请求（客户端错误请求的过程有一些问题，可能是请求没写对，也可能是没有权限，或者找不到对应的资源）\n  5xx：服务器处理请求出错（服务器的锅）\n\n\n一些常用的状态码\n\n200：正常处理\n\n204：请求成功，但是没有可以返回的资源，只返回响应首部没有实体主体\n\n206：客户端进行了范围请求，服务器成功响应了这部分请求（这里响应首部字段必须有一个content-Range来说明响应范围）\n\n301：永久性重定向，要求以后都用新的URI请求\n\n302：临时性重定向，要求临时用新的URI访问；它不允许在重定向的过程中变换请求方法（虽然很多人经常不遵守这一规定）\n\n303：与302类似，但是要求改用GET请求进行重定向\n\n304：虽然是3字辈，但是跟重定向没有半毛钱关系。找到了对应资源，但是不满足请求中包含的一些筛选条件（比如过期了）（这些条件由几个请求首部字段控制）\n\n307：和302就是一样的\n\n400：请求不能被识别，可能是请求报文的语法错误\n\n401：需要附带http验证，或之前的http验证失败了（这里需要有个响应首部字段www-Authenticate用以质询用户信息）\n\n403：没有访问的权限\n\n404：无法找到对应资源，或者你拒绝请求，但是不想跟客户端说明原因，也可以用这个\n\n500：服务器出错\n\n503：服务器超负载或正在维护（这里可以加一个响应首部字段Retry-After用来告诉客户端以上状况的解决时间）\n\n"
} ,
  
  {
    "title"    : "web攻击技术简述",
    "category" : "",
    "tags"     : " http",
    "url"      : "/2021/07/01/http1.html",
    "date"     : "July 1, 2021",
    "excerpt"  : "web攻击的目标一般是web应用，web应用中的资源，服务器和客户端。http协议本身并不存在安全问题，也几乎不会受到攻击。利用各种不同类型的漏洞，web攻击有不同的攻击方式。 \n\nhttp协议的特点\n\nhttp不具备必要的安全功能\n\nhttp协议本身是一个简单的单纯协议机制，这一点使它具备众多优势，也使它在安全性方面呈现劣势。\n\n比如不同于http协议的ssh协议，它具备协议级别的安全机制，所以每个人都可以轻易搭建安全级别较高的ssh服务，而http就不行，一般假设好http服务器后还要...",
  "content"  : "web攻击的目标一般是web应用，web应用中的资源，服务器和客户端。http协议本身并不存在安全问题，也几乎不会受到攻击。利用各种不同类型的漏洞，web攻击有不同的攻击方式。 \n\nhttp协议的特点\n\nhttp不具备必要的安全功能\n\nhttp协议本身是一个简单的单纯协议机制，这一点使它具备众多优势，也使它在安全性方面呈现劣势。\n\n比如不同于http协议的ssh协议，它具备协议级别的安全机制，所以每个人都可以轻易搭建安全级别较高的ssh服务，而http就不行，一般假设好http服务器后还要重新开发。\n\n在客户端即可篡改请求\n\n从浏览器那接收到的 HTTP 请求的全部内容，都可以在客户端自由地变更、篡改。所以 Web 应用可能会接收到与预期数据不相同的内容。\n\n在 HTTP 请求报文内加载攻击代码，就能发起对 Web 应用的攻击。通过 URL查询字段或表单、HTTP 首部、Cookie 等途径把攻击代码传入，若这时 Web 应用存在安全漏洞，那内部信息就会遭到窃取，或被攻击者拿到管理权限\n\nweb攻击的主要方式\n\n主动攻击：通过访问资源进行攻击；如sql注入、os注入\n\n被动攻击：圈套策略；如跨站脚本攻击、跨站点请求伪造\n\n跨站脚本攻击XSS\n\n通过存在安全漏洞的Web 网站注册用户的浏览器内运行非法的 HTML标签或 JavaScript 进行的一种攻击\n\n\n  影响：\n    \n      利用虚假输入表单骗取用户个人信息；\n      利用脚本窃取用户的 Cookie 值，被害者在不知情的情况下，帮助攻击者发送恶意请求；\n      显示伪造的文章或图片；\n    \n  \n  案例\n    \n      通过输入框或者url栏偷偷嵌入js代码；\n      窃取用户cookie\n    \n  \n\n\nsql注入攻击\n\n通过运行非法的 SQL而产生的攻击\n\n\n  影响：\n    \n      非法查看或篡改数据库内的数据；\n      规避认证；\n      执行和数据库服务器业务关联的程序等；\n    \n  \n\n\n各类web攻击的机制\n\n利用转义不完全产生的漏洞\n\n\n  xss跨站脚本攻击\n  sql注入：通过sql注入控制数据库\n  os注入：通过os注入控制操作系统\n  http首部攻击：恶意修改http请求首部或请求主体\n  邮件首部攻击：恶意修改邮件请求首部\n  外部文件攻击\n  目标遍历攻击：相对地址转绝对地址查找隐藏文件\n\n\n利用设计不合理的缺陷\n\n\n  不合理的提示信息：不错提示信息暴露后台数据模式\n  重定向url攻击：开放重定向后攻击者利用重定向功能诱导跳转虚假网站\n  强制浏览：图片等资源的强制地址\n\n\n利用会话管理疏忽引发的漏洞\n\n\n  会话劫持：偷session id\n  会话固定攻击：让用户用你的session id\n  跨站点请求伪造\n\n\n其他\n\n\n  中间人攻击\n  XST攻击\n\n"
} ,
  
  {
    "title"    : "纯css和css属性实现动态流量小球",
    "category" : "",
    "tags"     : " vue, CSS",
    "url"      : "/2021/06/04/liuliangqiu.html",
    "date"     : "June 4, 2021",
    "excerpt"  : "\n前记\n\n在数据可视化页面开发中，经常会有流量小球的开发需求。如何通过纯前端实现动态流量小球，而不需要使用设计小哥嗟来之图呢？\n\n\n\n静态CSS实现波浪效果\n\n研究前端实现波浪效果的过程中，我查阅到一些不同的实现方式，比如使用css库CSS Trick；再如使用canvas画贝塞尔曲线；或者干脆就是通过定时器循环移动一个切图等。\n\n而最打动我的方式是来自chokcoco先生的纯css实现波浪效果，于是自己尝试着也实现一次。\n\n原理\n\n如上图所示的流量小球，最主要的组成部分是蓝色部分的波浪，...",
  "content"  : "\n前记\n\n在数据可视化页面开发中，经常会有流量小球的开发需求。如何通过纯前端实现动态流量小球，而不需要使用设计小哥嗟来之图呢？\n\n\n\n静态CSS实现波浪效果\n\n研究前端实现波浪效果的过程中，我查阅到一些不同的实现方式，比如使用css库CSS Trick；再如使用canvas画贝塞尔曲线；或者干脆就是通过定时器循环移动一个切图等。\n\n而最打动我的方式是来自chokcoco先生的纯css实现波浪效果，于是自己尝试着也实现一次。\n\n原理\n\n如上图所示的流量小球，最主要的组成部分是蓝色部分的波浪，这部分通过css绘画似乎比较麻烦。于是我们反向思考，通过上层的圆角矩形遮挡，遮挡下层的纯蓝色底图的形式来实现。\n\n画图\n\n这里先画了一个置于下层的蓝色圆球，然后通过伪元素设置倾斜角度、圆角和透明度不同的两个白色圆角矩形遮挡，初步实现了海浪的形状。\n\n\n\n动画\n\n使用css动画animation属性，为两个矩形设置不同的旋转速度，海浪的动感就出来了。\n\n\n\n调整其他css属性后，得到了流量小球的样式\n\n\n\n设置变量\n\ncss变量\n\n通过为小球遮罩层设置top属性，可以动态调整流量球流量大小。\n\n声明css变量的时候，变量名前面要加两根连词线（–），然后使用var()函数读取变量。\n\n这里需要注意下，css的变量名是大小写敏感的。\n\n.wave::before,.wave::after{\n  content: &quot;&quot;;\n  position: absolute;\n  width: 400px;\n  height: 400px;\n  top: var(--ballPercent);   /* 变量 */\n  left: 50%;\n  background-color: rgba(0, 26, 46, .4);\n  border-radius: 43%;\n  transform: translate(-50%, -70%) rotate(0);\n  animation: rotate 3s linear infinite;\n  z-index: 10;\n}\n\n\n在vue中\n\n在data中同样定义一个ballPercent，来设置球体流量大小。\n\ndata() {\n    return {\n        ballPercent:50,// （100~0）\n    }\n},\n\n将变量绑定在html中。\n&amp;lt;div class=&quot;wave&quot; :style=&quot;{&#39;--ballPercent&#39;: -ballPercent+40+&#39;%&#39;}&quot;&amp;gt;&amp;lt;/div&amp;gt;\n\n最后\n\n加上数学逻辑，流量小球就能根据后台数据变化时刻变化了。\n\n\n\n\n  相关连接：CSS-Trick官网 chokcoco的主页\n\n"
} ,
  
  {
    "title"    : "前端切图仔的简易文本加密工具",
    "category" : "",
    "tags"     : " JavaScript, CSS",
    "url"      : "/2021/06/03/jiami.html",
    "date"     : "June 3, 2021",
    "excerpt"  : "这是什么？一张马赛克，马赛克的背后往往隐匿着令人兴奋的真相。这是一张埋藏着秘密的文本加密图。\n\n\n\n前记\n\n加密\n\n听起来一直是一个颇具难度的词，进行加密操作似乎需要你学习某个太平洋岛国的小众方言或者精通各类密码学；其实加密的原理简单粗暴，无非是两步：\n\n\n  \n    对汉字（字符）进行转化；\n  \n  \n    通过特定的公式进行加密和解密。\n  \n\n\n那么今天我们就来尝试下用最简单最不专业的方式制作一张文本加密图吧。\n\n汉字的转化\n\n使用Unicode将汉字转换为数字\n\n\n（Unic...",
  "content"  : "这是什么？一张马赛克，马赛克的背后往往隐匿着令人兴奋的真相。这是一张埋藏着秘密的文本加密图。\n\n\n\n前记\n\n加密\n\n听起来一直是一个颇具难度的词，进行加密操作似乎需要你学习某个太平洋岛国的小众方言或者精通各类密码学；其实加密的原理简单粗暴，无非是两步：\n\n\n  \n    对汉字（字符）进行转化；\n  \n  \n    通过特定的公式进行加密和解密。\n  \n\n\n那么今天我们就来尝试下用最简单最不专业的方式制作一张文本加密图吧。\n\n汉字的转化\n\n使用Unicode将汉字转换为数字\n\n\n（Unicode可以容纳世界上所有文字）\nUnicode编码\n\n一开始就是为了解决不同语言之间的障碍而出现的，于是乎，世界上的每个汉字和不同语言的文字都拥有了属于自己的unicode码，进行汉字加密的第一步便是将汉字转为unicode码，比如下面的这段话：\n\n晚上一起去喝酒别告诉你老婆\n\n经过charCodeAt的转化，顺利转成了\n\ndata() {\n  return {\n    encryption:&#39;晚上一起去喝酒别告诉你老婆&#39;,\n  }\n},\nmounted () {\n  // 遍历字符串\n  for(let i=0;i&amp;lt;this.encryption.length;i++){\n    console.log(this.encryption.charAt(i))\n    console.log(this.encryption.charAt(i).charCodeAt(0).toString())\n  }\n},\n\n\n\n\n（经过转化后，汉字“晚”被转化为对应的Unicode编码“26202”）\n初步加密\n\n转化为Unicode码后的文本，已经初步得到了加密，但是经验丰富的程序员还是能一眼看出这其中的含义，我们需要对这些编码进行更进一步（更花里胡哨）的加密；\n\n进一步转化为rgb颜色值似乎是一个够骚的办法；但是rgb的颜色值由三个0-255的数字组成，而转换后的编码包含0~9的数字，怎样才能完成Unicode码到rgb的转化呢？\n\n\n\n（每一个rgb颜色值由R(0~255)、G(0~255)、B(0~255)组成）\n\n有了！对Unicode编码进行三进制转换不就能将每个数字都控制在0-2之间吗？于是这串汉字在进行Unicode编码转换后，又进行了一次三进制转换，得到了这样的结果：\n\n// 遍历字符串\nfor(let i=0;i&amp;lt;this.encryption.length;i++){\n  console.log(this.encryption.charAt(i))\n  console.log(this.encryption.charAt(i).charCodeAt(0).toString(3))// 转化为三进制\n}\n\n\n\n\n（汉字“晚”先被转化为对应的Unicode编码“26202”，而后又被转化为对应的三进制数字“1022221110”）\n进一步地\n我们对每一个编码进行截取，终于得到了类似rgb一样数值；\n\n// 遍历字符串\nfor(let i=0;i&amp;lt;this.encryption.length;i++){\n  console.log(this.encryption.charAt(i))\n  let a = this.encryption.charAt(i).charCodeAt(0).toString(3)// 转化为三进制\n  console.log(a.substring(0,3)+&#39;,&#39;+a.substring(3,6)+&#39;,&#39;+a.substring(6,9)+&#39;,&#39;+a.substring(9,10))// 将得到的三进制数字切割为4份\n}\n\n\n\n（汉字对应的三进制数字“1022221110”，被分割为“102,222,111,0”）\n这样的数字，是不是已经很像我们所需要的rgb颜色值了，但是每个编码都由10位数字组成，似乎比rgb的9位多了一位！别急，最后的一位我们之后再处理；在这之前我们先进行最令人兴奋的一步，将这些编码转化为颜色；\n\n首先，我们先去掉之前的多余操作，对获取到的数据进行整合，得到了passwords数组；\n\n// 遍历字符串\nfor(let i=0;i&amp;lt;this.encryption.length;i++){\n  this.$set(this.passwords,i,this.encryption.charAt(i).charCodeAt(0).toString(3))\n}\nconsole.log(this.encryption)\nconsole.log(&#39;passwords:&#39;+this.passwords)\n\n\n\n\n然后遍历passwords数组创建一个个p标签；\n\n&amp;lt;p class=&quot;p&quot; v-for=&quot;(item,index) in passwords&quot; :key=&quot;index&quot;&amp;gt;\n  ,,\n&amp;lt;/p&amp;gt;\n\n\n\n（每一个p标签代表一个编码）\n\n下一步\n就是通过每个数据的前三个值，为p标签染色啦，当当当，经过染色的p标签终于华丽变身为灿烂的自己；\n\n&amp;lt;p class=&quot;p&quot; \n  v-for=&quot;(item,index) in passwords&quot; \n  :key=&quot;index&quot; \n  :style=&quot;{backgroundColor: &#39;rgb(&#39;+item.substring(0,3)+&#39;,&#39;+item.substring(3,6)+&#39;,&#39;+item.substring(6,9)+&#39;)&#39;}&quot;&amp;gt;\n&amp;lt;/p&amp;gt;\n\n\n\n\n接下来\n只需要将p标签的规格改动一下，一个个类似像素点的标签骤然出现；这个时候，我们已经初步有了一个经过加密的文字加密图；\n\n然而\n当前的加密数据仍然不够准确，因为刚刚，我们漏掉了字符编码的最后一位没有处理。那我们该怎么处理这最后一位字符编码呢？\n\n其实依靠上面的思路，处理最后一位的方式有很多，可以转化为像素的圆角，宽度等，这里我选择将它们转换为透明度也就是rgba中的A\n\n三进制数字的最后一位只有三种可能，即0、1和2；通过简单的数学公式（-x+4）*0.25便能将这三者转化为对应的透明度1、0.75和0.5；说干就干，一个带透明度的加密图片出现了；\n\n&amp;lt;p class=&quot;p&quot; \nv-for=&quot;(item,index) in passwords&quot; \n:key=&quot;index&quot; \n:style=&quot;{backgroundColor: &#39;rgba(&#39;+item.substring(0,3)+&#39;,&#39;+item.substring(3,6)+&#39;,&#39;+item.substring(6,9)+&#39;,&#39;+ (-item.substring(9,10)+4)*0.25+&#39;)&#39;}&quot;\n&amp;gt;&amp;lt;/p&amp;gt;\n\n\n\n\n进一步优化\n\n字母和符号\n\n我们发现，以上方法只适用于汉字，对于Unicode编码很短的常见数字和字母并不适用；为了适配数字和字母，我们应该怎样给数字和字母进行单独的加密操作呢？\n\n上文的介绍中，我们提到，rgb的颜色值在0-255之间，而我们使用了三进制加密使得颜色值最高只能达到222；222以上的数值并没出现的可能；那么解决思路就来了，给数字和字母加上255作为标识符不就可以的了吗！\n\n单独对数字和字母进行特殊的操作（这里我在处理数字和字母时改用十进制编码，同时在编码的前面三位加上255作为标识，编码的后面补足够的0，达到长度为10字符的要求）\n\n例如\n\n字母’a’的unicode为97，增加前缀255，在后面补足0；我们便得到了专属于’a’的加密编码\n\n255,097,000,0 \n\n英文逗号’,’的unicode为44，增加前缀255，在后面补足0；我们便得到了专属于’,’的加密编码\n\n255,044,000,0\n\n// 遍历字符串\nfor(let i=0;i&amp;lt;this.encryption.length;i++){\n  // 汉字\n  if(this.encryption.charAt(i).charCodeAt(0).toString()&amp;gt;255){\n    this.$set(this.passwords,i,this.encryption.charAt(i).charCodeAt(0).toString(3))\n  }\n  // 数字和字母\n  else{\n    // unicode码为0~9\n    if(this.encryption.charAt(i).charCodeAt(0).toString().length == 1){\n      this.$set(this.passwords,i,&#39;25500&#39; + this.encryption.charAt(i).charCodeAt(0).toString() + &#39;0000&#39;)\n    }\n    // unicode码为10~99\n    else if(this.encryption.charAt(i).charCodeAt(0).toString().length == 2){\n      this.$set(this.passwords,i,&#39;2550&#39; + this.encryption.charAt(i).charCodeAt(0).toString() + &#39;0000&#39;)\n    }\n    // unicode码为100~255\n    else{\n      this.$set(this.passwords,i,&#39;255&#39; + this.encryption.charAt(i).charCodeAt(0).toString() + &#39;0000&#39;)\n    }\n  }\n}\n\n\n最后\n\n完成\n\n最后简单加上按钮和输入框，一个前端文本加密工具就完成啦；\n\n\n\n当我们把代表一个汉字的每一小格子缩小到一个像素，加密图片信息存储量便达到了惊人的高度；一张800w像素的图片，可以储存800w字相当于数十本书的字数；\n\n\n\n（默写一百遍《琵琶行》）\n\n改进\n使用p标签进行渲染有诸多坏处，比如你并不能保存为图片，而且图片格式也不利于JS直接解密，可以改为使用canvas进行渲染，这里使用p标签进行演示纯粹是因为我懒；\n\n延伸\n上面只是提供了一种进行简单加密的思路，举一反三，我们同样可以将数字编码转换为对应的圆角、旋转角度、长度等等视觉表现；是不是很高(zhuang)级(bi)快搞一个试试吧，冲啊。\n\n解密\n如此这般自己解吧\n"
} ,
  
  {
    "title"    : "展开语法和剩余语法(...)",
    "category" : "",
    "tags"     : " JavaScript",
    "url"      : "/2021/05/03/zhangkai.html",
    "date"     : "May 3, 2021",
    "excerpt"  : "展开和剩余语法在不定项函数使用，数组对象拼接拷贝方面表现优异 \n\n展开语法\n\n展开语法…用于展开数组或者对象。（展开语法无法在IE浏览器中使用）\n\n展开语法的基本用法\n如果是数组，展开成一项一项；在构造字面量对象时, 将对象表达式按key-value的方式展开。\n\n\n  函数调用时，像apply一样展开\n      function sum(x, y, z) { \n  return x + y + z; \n  } \n  const numbers = [1, 2, 3]; \n  conso...",
  "content"  : "展开和剩余语法在不定项函数使用，数组对象拼接拷贝方面表现优异 \n\n展开语法\n\n展开语法…用于展开数组或者对象。（展开语法无法在IE浏览器中使用）\n\n展开语法的基本用法\n如果是数组，展开成一项一项；在构造字面量对象时, 将对象表达式按key-value的方式展开。\n\n\n  函数调用时，像apply一样展开\n      function sum(x, y, z) { \n  return x + y + z; \n  } \n  const numbers = [1, 2, 3]; \n  console.log(sum(...numbers));// 输出: 6 \n  console.log(sum.apply(null, numbers));// 输出: 6 \n    \n  \n  在构造数组的时候使用\n      let list = [1, 2, 3] \n  let b = [...list, ...&quot;hello&quot; ,4, &#39;6&#39;] \n    \n  \n  用于复制对象，或者属性拷贝\n      // 复制 \n  let newobj = {...obj} \n  // 增加 \n  let newobj = {id:&#39;123&#39;,...obj} \n    \n    \n  \n\n\n展开语法的实用例子\n\n\n  展开语法在new中的使用\n\n\n使用 new 关键字来调用构造函数时，不能直接使用数组+ apply 的方式（apply 执行的是调用 [[Call]] , 而不是构造 [[Construct]]）。当然, 有了展开语法, 将数组展开为构造函数的参数就很简单了：\n  var dateFields = [1970, 0, 1];\n  var d = new Date(...dateFields);\n\n\n\n\n  使用展开语法进行数组操作非常给力，可以直接替代push、concat、unshift等方法的使用\n      var parts = [&#39;shoulders&#39;, &#39;knees&#39;]; \n  var lyrics = [&#39;head&#39;, ...parts, &#39;and&#39;, &#39;toes&#39;]; \n    \n  \n  使用展开语法拷贝数组和对象后不再是单纯的地址指针复制\n      var arr = [1, 2, 3]; \n  var arr2 = [...arr]; // like arr.slice() \n  arr2.push(4); // arr2 此时变成 [1, 2, 3, 4]// arr 不受影响 \n    \n    但是呢，这个拷贝与Object.assign一样，都只进行第一层的浅拷贝，如果下面的a是一个二维数组，那第二维还是指针，这时候修改拷贝后的参数，还是会影响到原来的a\n      var a = [[1], [2], [3]];\n  var b = [...a]; \n  b.shift().shift(); // 1 \n    \n    \n  \n\n\n在数组或函数参数中使用时，展开语法只能用于可迭代对象 （可以被for..of循环使用）\n\n剩余语法\n剩余语法准确来说跟展开语法相反，它被放在形参的最后一位，用来把多余的输入参数整合为一个数组\n\n用在不定输入参数的函数形参中\n  function a(a, b, ...theArgs) { \n      return theArgs.reduce((previous, current) =&amp;gt; { \n          return previous + current; \n      }); \n  } \n  console.log(a(1,1,1,2,3)) // 6，前两个1被赋值到形参a和b中 输出: 6 \n\n剩余参数和 arguments对象的区别\n\n  剩余参数只包含那些没有对应形参的实参，而 arguments 对象包含了传给函数的所有实参。\n  arguments对象不是一个真正的数组，而剩余参数是真正的 Array实例，也就是说你能够在它上面直接使用所有的数组方法，比如 sort，map，forEach或pop。\n  arguments对象还有一些附加的属性 （如callee属性）。\n\n\n剩余语法的使用实例\n\n  用于判断参数数量\n      function fun1(...theArgs) {\nalert(theArgs.length);\n  }\n  fun1();  // 弹出 &quot;0&quot;, 因为theArgs没有元素\n  fun1(5); // 弹出 &quot;1&quot;, 因为theArgs只有一个元素\n  fun1(5, 6, 7); // 弹出 &quot;3&quot;, 因为theArgs有三个元素\n    \n  \n  累乘\n      function multiply(multiplier, ...theArgs) {\nreturn theArgs.map(function (element) {\n  return multiplier * element;\n});}\n  var arr = multiply(2, 1, 2, 3);\n  console.log(arr);  // [2, 4, 6]\n    \n  \n  下例演示了你可以在剩余参数上使用任意的数组方法，而arguments对象不可以\n      function sortRestArgs(...theArgs) {\nvar sortedArgs = theArgs.sort();\nreturn sortedArgs;\n  }\n  alert(sortRestArgs(5,3,7,1)); // 弹出 1,3,5,7\n  function sortArguments() {\nvar sortedArgs = arguments.sort();\nreturn sortedArgs; // 不会执行到这里\n  }\n  alert(sortArguments(5,3,7,1)); // 抛出TypeError异常:arguments.sort is not a function\n    \n  \n\n\n\n  相关文档：MDN文档\n\n"
} ,
  
  {
    "title"    : "Dark Mode",
    "category" : "",
    "tags"     : " Katex, Markdown",
    "url"      : "/2021/04/27/dark-mode.html",
    "date"     : "April 27, 2021",
    "excerpt"  : "More colors with less light.\n\nClick the half-moon most top-right button to turn the lights on/off.\n\nHeaders\nLevel 2\nLevel 3\nLevel 4\nLevel 5\nLevel 6\n\nHeaders with links\nLevel 2\nLevel 3\nLevel 4\nLevel 5\nLevel 6\n\nCode highlight\nMode specific code high...",
  "content"  : "More colors with less light.\n\nClick the half-moon most top-right button to turn the lights on/off.\n\nHeaders\nLevel 2\nLevel 3\nLevel 4\nLevel 5\nLevel 6\n\nHeaders with links\nLevel 2\nLevel 3\nLevel 4\nLevel 5\nLevel 6\n\nCode highlight\nMode specific code highlighting themes. Kramdown which is responsible for the color highlighting may be more limited than your IDE.\n\n#!/usr/bin/env python\n&quot;&quot;&quot;\nTest file for syntax\n&quot;&quot;&quot;\n# TODO: Use dark mode\nfrom sys import os\n\ndef foo(bar): \n    try:\n        print(bar)\n    except NameError:\n        print(&quot;Variable bar is not defined&quot;)\n\n\nclass Bar(object): \n    def __init__(self):\n        foo(1)\n        self.octal = &#39;\\04&#39;\n        self.text = &quot;&quot;&quot;Example \\t\\n&quot;&quot;&quot;\n    \n    def __exit__(self, *args):\n        print(&#39;exit\\u1111\\xFF&#39;)\n        pass\n    \n    @staticmethod\n    def example():\n        assert (1.0 and 2L) or True\n        return { &quot;example&quot;: [(1,), (r&#39;raw&#39;, u&#39;unicode&#39;)]}\n\n\nTables\n\n\n  \n    \n      hex\n      dec\n      oct\n    \n  \n  \n    \n      0\n      0\n      0\n    \n    \n      5\n      5\n      5\n    \n    \n      A\n      10\n      12\n    \n    \n      F\n      16\n      20\n    \n    \n      F5\n      21\n      25\n    \n  \n\n\nKaTeX\n\nSome KaTeX diagrams to check in dark mode:\n\n\\[\\begin{CD}\nA @&amp;gt;a&amp;gt;&amp;gt; B \\\\\n@VbVV @AAcA \\\\\nC @= D\n\\end{CD}\\]\n\n\\[\\utilde{AB}\\]\n"
} ,
  
  {
    "title"    : "Sample post",
    "category" : "",
    "tags"     : " A Tag, Katex",
    "url"      : "/2019/06/30/sample-post.html",
    "date"     : "June 30, 2019",
    "excerpt"  : "Consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. \nPraesent et diam eget libero egestas mattis sit amet vitae augue. Nam tinci...",
  "content"  : "Consectetur adipiscing elit. Donec a diam lectus. Sed sit amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante hendrerit. Donec et mollis dolor. \nPraesent et diam eget libero egestas mattis sit amet vitae augue. Nam tincidunt congue enim, ut porta lorem lacinia consectetur. \n\nDonec ut libero sed arcu vehicula ultricies a non tortor. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean ut gravida lorem.\n\n\n  Consectetur adipiscing elit\n  Donec a diam lectus\n  Sed sit amet ipsum mauris\n\n\nUt turpis felis, pulvinar a semper sed, adipiscing id dolor. Pellentesque auctor nisi id magna consequat sagittis. Curabitur dapibus enim sit amet elit pharetra tincidunt feugiat nisl imperdiet. Ut convallis libero in urna ultrices accumsan. Donec sed odio eros. Donec viverra mi quis quam pulvinar at malesuada arcu rhoncus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. In rutrum accumsan ultricies. Mauris vitae nisi at sem facilisis semper ac in est.\n\nNunc diam velit, adipiscing ut tristique vitae, sagittis vel odio. Maecenas convallis ullamcorper ultricies. Curabitur ornare, ligula semper consectetur sagittis, nisi diam iaculis velit, id fringilla sem nunc vel mi. Nam dictum, odio nec pretium volutpat, arcu ante placerat erat, non tristique elit urna et turpis. Quisque mi metus, ornare sit amet fermentum et, tincidunt et orci. Fusce eget orci a orci congue vestibulum.\n\n\n    \n    \n        \n    \n    \n\n\nUt dolor diam, elementum et vestibulum eu, porttitor vel elit. Curabitur venenatis pulvinar tellus gravida ornare. Sed et erat faucibus nunc euismod ultricies ut id justo. Nullam cursus suscipit nisi, et ultrices justo sodales nec. Fusce venenatis facilisis lectus ac semper. Aliquam at massa ipsum. Quisque bibendum purus convallis nulla ultrices ultricies. Nullam aliquam, mi eu aliquam tincidunt, purus velit laoreet tortor, viverra pretium nisi quam vitae mi. Fusce vel volutpat elit. Nam sagittis nisi dui.\n\n\n  Suspendisse lectus leo, consectetur in tempor sit amet, placerat quis neque\n\n\nEtiam luctus porttitor lorem, sed suscipit est rutrum non. Curabitur lobortis nisl a enim congue semper. Aenean commodo ultrices imperdiet. Vestibulum ut justo vel sapien venenatis tincidunt.\n\n\\[\\Theta \\ne \\Gamma\\]\n\nPhasellus eget dolor sit amet ipsum dapibus condimentum vitae quis lectus. Aliquam ut massa in turpis dapibus convallis. Praesent elit lacus, vestibulum at malesuada et, ornare et est. Ut augue nunc, sodales ut euismod non, adipiscing vitae orci1. Mauris ut placerat justo. Mauris in ultricies enim. Quisque nec est eleifend nulla ultrices egestas quis ut quam. Donec sollicitudin lectus a mauris pulvinar id aliquam urna cursus. Cras quis ligula sem, vel elementum mi. Phasellus non ullamcorper urna.\n\n\n  \n    \n\n      John Smith, A Title About Citations &amp;#8617;\n    \n  \n\n"
} ,
  
  {
    "title"    : "Color Post",
    "category" : "",
    "tags"     : " Test, Color",
    "url"      : "/2019/05/18/color-post.html",
    "date"     : "May 18, 2019",
    "excerpt"  : "What a colorful post!\n\nThis is an idea that came from xukimseven/HardCandy-Jekyll \nlooking at this cheerful and colorful theme, I wanted to enable something similar for Type-on-Strap.\n\nYou can go fork and star HardCandy-Jekyll too! 😉\n\n\n\nHow does i...",
  "content"  : "What a colorful post!\n\nThis is an idea that came from xukimseven/HardCandy-Jekyll \nlooking at this cheerful and colorful theme, I wanted to enable something similar for Type-on-Strap.\n\nYou can go fork and star HardCandy-Jekyll too! 😉\n\n\n\nHow does it work?\n\nBasically you need to add just one thing, the color:\n\n---\nlayout: post\ntitle: Color Post\ncolor: brown\n---\n\n\nIt can either be a html color like brown (which look like red to me). Or with the rgb:\n\n---\nlayout: post\ntitle: Color Post\ncolor: rgb(165,42,42)\n---\n\n\nThe background used is lineart.png from xukimseven you can edit it in the config file. \nIf you want another one, put it in /assets/img as well.\n\n\n  ⚠️ It’s a bit hacking the css in the post.html\n\n"
} ,
  
  {
    "title"    : "Bootstrap",
    "category" : "",
    "tags"     : " Test",
    "url"      : "/2017/09/17/Use-Bootstrap.html",
    "date"     : "September 17, 2017",
    "excerpt"  : "This theme is compatible with Bootstrap if you choose to use it in your pages or posts.\nHere is a little demo with a code snippet, look at the source to see how the HTML and markdown get tangled.\n\nUse bootstrap\n\nAdd some custom Bootstrap in the cu...",
  "content"  : "This theme is compatible with Bootstrap if you choose to use it in your pages or posts.\nHere is a little demo with a code snippet, look at the source to see how the HTML and markdown get tangled.\n\nUse bootstrap\n\nAdd some custom Bootstrap in the custom layout!\n\n\n\nSnippet example\n\nIf you are new to Bootstrap you can  always check the documentation.\nHere is an example from startbootstrap.com.\n\n\n\n\n  \n    \n      \n        \n        \n          \n            Project One\n          \n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam viverra euismod odio, gravida pellentesque urna varius vitae.\n        \n      \n    \n    \n      \n        \n        \n          \n            Project Two\n          \n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fugit aliquam aperiam nulla perferendis dolor nobis numquam, rem expedita, aliquid optio, alias illum eaque. Non magni, voluptates quae, necessitatibus unde temporibus.\n        \n      \n    \n    \n      \n        \n        \n          \n            Project Three\n          \n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam viverra euismod odio, gravida pellentesque urna varius vitae.\n        \n      \n    \n    \n      \n        \n        \n          \n            Project Four\n          \n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fugit aliquam aperiam nulla perferendis dolor nobis numquam, rem expedita, aliquid optio, alias illum eaque. Non magni, voluptates quae, necessitatibus unde temporibus.\n        \n      \n    \n    \n      \n        \n        \n          \n            Project Five\n          \n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam viverra euismod odio, gravida pellentesque urna varius vitae.\n        \n      \n    \n    \n      \n        \n        \n          \n            Project Six\n          \n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fugit aliquam aperiam nulla perferendis dolor nobis numquam, rem expedita, aliquid optio, alias illum eaque. Non magni, voluptates quae, necessitatibus unde temporibus.\n        \n      \n    \n  \n  \n\n\n\n\nMix it with Markdown\n\nAll the above was custom HTML with Bootstrap.\nYou can also mix it up with some markdown.\n\nYou can use the bootstrap’s build in javascript API to control your event.\nHere is a code snippet for the documentation:\n\n$(&#39;#myModal&#39;).on(&#39;show.bs.modal&#39;, function (e) {\n    if (!data) return e.preventDefault() // stops modal from being shown\n})\n\n\nThat’s just for demo though, you would need to properly integrate your javascript in your page.\nUsually you would put any custom javascript script in the assets folder under js and reference it in your page from there.\n\nSo try it out using the bootstrap: true flag! 😉\n"
} ,
  
  {
    "title"    : "Feature images",
    "category" : "",
    "tags"     : " Test, Image",
    "url"      : "/2014/11/29/feature-images.html",
    "date"     : "November 29, 2014",
    "excerpt"  : "Hopefully you will find enough information about how to set images in your blog here.\nThis is an example of a post which includes a feature image specified in the front matter of the post. \nThe feature image spans the full-width of the page, and i...",
  "content"  : "Hopefully you will find enough information about how to set images in your blog here.\nThis is an example of a post which includes a feature image specified in the front matter of the post. \nThe feature image spans the full-width of the page, and is shown with the title on permalink pages:\n\nfeature-img: &quot;assets/img/feature-img/desk-messy.jpeg&quot;\nthumbnail: &quot;assets/img/thumbnails/feature-img/desk-messy.jpeg&quot; \n\n\nYou can also use a thumbnail, a smaller version of the same image to improve loading of the page.\nThe thumbnail will also be used when you share your article on other platform (linkedin, whatsapp, facebook, …).\n\n\n  \n    And now it is working\n  \n\n\nYou can also add images aligned in your post using the aligner include.\nMake sure to separate all of the image path from in a string separated with ,.\nIt by default look into assets/img/ so give the path from there, example:\n\n{% include aligner.html images=&quot;pexels/book-glass.jpeg,triangle.png&quot; %}\n\n\n    \n    \n        \n    \n    \n    \n        \n    \n    \n\n\nHere you have two images side by side, but you can set more and set the amount per columns \n(by specifying the number of columns or let it be automatic using &quot;auto&quot;):\n\n{% include aligner.html images=&quot;portfolio/cabin.png,portfolio/cake.png,portfolio/circus.png&quot; column=3 %}\n\n\n    \n    \n        \n    \n    \n    \n        \n    \n    \n    \n        \n    \n    \n\n\nit also works with only one images, it is made to display it smaller than normally.\nHowever you can just use the Markdown way of doing it to get the image normal sized and centered.\n\n# Markdown way (bigger)\n![Travel]({{ &quot;/assets/img/pexels/computer.jpeg&quot; | relative_url}})\n# Aligner with only One (50% of width)\n{% include aligner.html images=&quot;pexels/computer.jpeg&quot; %}\n\n\n    \n    \n        \n    \n    \n\n\n"
} ,
  
  {
    "title"    : "Markdown and HTML",
    "category" : "",
    "tags"     : " Katex, Markdown",
    "url"      : "/2014/11/28/markdown-and-html.html",
    "date"     : "November 28, 2014",
    "excerpt"  : "Jekyll supports the use of Markdown with inline HTML tags which makes it easier to quickly write posts with Jekyll, without having to worry too much about text formatting. A sample of the formatting follows.\n\nTitle\n\nSub title\n\nTables have also bee...",
  "content"  : "Jekyll supports the use of Markdown with inline HTML tags which makes it easier to quickly write posts with Jekyll, without having to worry too much about text formatting. A sample of the formatting follows.\n\nTitle\n\nSub title\n\nTables have also been extended from Markdown:\n\n\n  \n    \n      First Header\n      Second Header\n    \n  \n  \n    \n      Content Cell\n      Content Cell\n    \n    \n      Content Cell\n      Content Cell\n    \n  \n\n\nHere’s an example of an image, which is included using Markdown:\n\n\n\nThis is another example of list:\n\n\n  list of things\n    \n      Sub list\n      of Other things\n      with numbers\n    \n  \n  And many more\n    \n      Sub sub list\n        \n          can go on …\n            \n              and on …\n                \n                  and on !\n                \n              \n            \n          \n        \n      \n      That’s it.\n    \n  \n\n\nOther subtitle\n\nHighlighting for code in Jekyll is done using Base16 or Rouge. This theme makes use of Rouge by default.\n\n// count to ten\nfor (var i = 1; i &amp;lt;= 10; i++) {\n    console.log(i);\n}\n\n// count to twenty\nvar j = 0;\nwhile (j &amp;lt; 20) {\n    j++;\n    console.log(j);\n}\n\nMath\n\nType on Strap uses KaTeX to display maths. Equations such as \\(S_n = a \\times \\frac{1-r^n}{1-r}\\) can be displayed inline.\n\nAlternatively, they can be shown on a new line:\n\n\\[f(x) = \\int \\frac{2x^2+4x+6}{x-2}\\]\n\n"
} ,
  
  {
    "title"    : "What&#39;s your title",
    "category" : "",
    "tags"     : " Test, Image",
    "url"      : "/2014/11/27/whats-your-title.html",
    "date"     : "November 27, 2014",
    "excerpt"  : "This is an example of a post which includes a feature image that has a\ntext, where you don’t want to redisplay the title.\nMind your image size in order for the text to be displayed where you want it to.\nThe only limit is your imagination.\n\nHere is...",
  "content"  : "This is an example of a post which includes a feature image that has a\ntext, where you don’t want to redisplay the title.\nMind your image size in order for the text to be displayed where you want it to.\nThe only limit is your imagination.\n\nHere is how the yaml looks inside the post:\n\ntitle: What&#39;s your title\nhide_title: true\nfeature-img: assets/img/feature-img/story.jpeg\nauthor: mhagnumdw\ntags: [Test, Lorem]\n\n\nYou may wonder, why is there a title when you are not actually displaying it. \nWell that’s due to some jekyll limitation:\n\n\n  You can’t set the title to the empty string\n\n\nThe title is used elsewhere than inside the post, for example in the blog page that list this post.\nAn empty title would break those pages and possibly prevents jekyll to render your blog.\n"
} ,
  
  {
    "title"    : "The Real Lorem Ipsum",
    "category" : "",
    "tags"     : " Image, Color",
    "url"      : "/2014/11/26/lorem-ipsum.html",
    "date"     : "November 26, 2014",
    "excerpt"  : "Lorem Ipsum\n\nfrom “de Finibus Bonorum et Malorum” written by Cicero in 45 BC.\n \nFind out more on lipsum.com. And if you like colors, check out the http color trends from w3schools.\n\nThe standard Lorem Ipsum passage (since 1500s)\n\n“Lorem ipsum dolo...",
  "content"  : "Lorem Ipsum\n\nfrom “de Finibus Bonorum et Malorum” written by Cicero in 45 BC.\n \nFind out more on lipsum.com. And if you like colors, check out the http color trends from w3schools.\n\nThe standard Lorem Ipsum passage (since 1500s)\n\n“Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.”\n\nSection 1.10.32\n\nLatin\n“Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?”\n\nTranslation by H. Rackham (1914)\n“But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?”\n\nSection 1.10.33\n\nLatin\n\n“At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.”\n\nTranslation by H. Rackham (1914)\n\n“On the other hand, we denounce with righteous indignation and dislike men who are so beguiled and demoralized by the charms of pleasure of the moment, so blinded by desire, that they cannot foresee the pain and trouble that are bound to ensue; and equal blame belongs to those who fail in their duty through weakness of will, which is the same as saying through shrinking from toil and pain. These cases are perfectly simple and easy to distinguish. In a free hour, when our power of choice is untrammelled and when nothing prevents our being able to do what we like best, every pleasure is to be welcomed and every pain avoided. But in certain circumstances and owing to the claims of duty or the obligations of business it will frequently occur that pleasures have to be repudiated and annoyances accepted. The wise man therefore always holds in these matters to this principle of selection: he rejects pleasures to secure other greater pleasures, or else he endures pains to avoid worse pains.”\n\n"
} ,
  
  {
    "title"    : "Markup: Syntax Highlighting",
    "category" : "",
    "tags"     : " Highlight, Markdown",
    "url"      : "/2014/08/08/Markup-Syntax-Highlighting.html",
    "date"     : "August 8, 2014",
    "excerpt"  : "Syntax highlighting1 is a feature that displays source code. \nThis feature facilitates writing in a structured language such as a programming language or a markup language as it makes import things visually distinct.\n\nGFM Code Blocks\n\nGitHub Flavo...",
  "content"  : "Syntax highlighting1 is a feature that displays source code. \nThis feature facilitates writing in a structured language such as a programming language or a markup language as it makes import things visually distinct.\n\nGFM Code Blocks\n\nGitHub Flavored Markdown fenced code blocks are supported. To modify styling and highlight colors edit /_sass/syntax.scss.\n\n#container {\n  float: left;\n  margin: 0 -240px 0 0;\n  width: 100%;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n.highlight {\n  margin: 0;\n  padding: 1em;\n  font-family: $monospace;\n  font-size: $type-size-7;\n  line-height: 1.8;\n}\n\n\n&amp;lt;nav class=&quot;pagination&quot; role=&quot;navigation&quot;&amp;gt;\n  {% if page.previous %}\n    &amp;lt;a href=&quot;{{ site.url }}{{ page.previous.url }}&quot; class=&quot;btn&quot; title=&quot;{{ page.previous.title }}&quot;&amp;gt;Previous article&amp;lt;/a&amp;gt;\n  {% endif %}\n  {% if page.next %}\n    &amp;lt;a href=&quot;{{ site.url }}{{ page.next.url }}&quot; class=&quot;btn&quot; title=&quot;{{ page.next.title }}&quot;&amp;gt;Next article&amp;lt;/a&amp;gt;\n  {% endif %}\n&amp;lt;/nav&amp;gt;&amp;lt;!-- /.pagination --&amp;gt;\n\n\nmodule Jekyll\n  class TagIndex &amp;lt; Page\n    def initialize(site, base, dir, tag)\n      @site = site\n      @base = base\n      @dir = dir\n      @name = &#39;index.html&#39;\n      self.process(@name)\n      self.read_yaml(File.join(base, &#39;_layouts&#39;), &#39;tag_index.html&#39;)\n      self.data[&#39;tag&#39;] = tag\n      tag_title_prefix = site.config[&#39;tag_title_prefix&#39;] || &#39;Tagged: &#39;\n      tag_title_suffix = site.config[&#39;tag_title_suffix&#39;] || &#39;&amp;amp;#8211;&#39;\n      self.data[&#39;title&#39;] = &quot;#{tag_title_prefix}#{tag}&quot;\n      self.data[&#39;description&#39;] = &quot;An archive of posts tagged #{tag}.&quot;\n    end\n  end\nend\n\n\nCode Blocks in Lists\n\nIndentation matters. Be sure the indent of the code block aligns with the first non-space character after the list item marker (e.g., 1.). Usually this will mean indenting 3 spaces instead of 4.\n\n\n  Do step 1.\n  \n    Now do this:\n\n    def print_hi(name)\n  puts &quot;Hi, #{name}&quot;\nend\nprint_hi(&#39;Tom&#39;)\n#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.\n    \n  \n  Now you can do this.\n\n\nGitHub Gist Embed\n\nAn example of a Gist embed below:\n\n\n\nYou can use defer=true so that the loading of the gist doesn’t prevent the loading of the page.\n\n   &amp;lt;script defer=true \n           src=&quot;https://gist.github.com/sylhare/dad7ed1ef3d13614c77c4ebadf8a11c3.js&quot;&amp;gt;\n   &amp;lt;/script&amp;gt;\n\n\n  \n    \n\n      Michael’s Rose, Minimal Mistakes &amp;#8617;\n    \n  \n\n"
} ,
  
  {
    "title"    : "Generate a table of content",
    "category" : "",
    "tags"     : " Kramdown, Customization",
    "url"      : "/2013/12/12/Generate-a-table-of-content.html",
    "date"     : "December 12, 2013",
    "excerpt"  : "Using Kramdown GFM \n\n\n\n  Using Kramdown GFM     \n      Basic Usage\n    \n  \n  Using toc.js    \n      Customize with toc.js        \n          Use with this jekyll template\n        \n      \n      Basic Usage\n      How it would look like\n    \n  \n\n\nBasi...",
  "content"  : "Using Kramdown GFM \n\n\n\n  Using Kramdown GFM     \n      Basic Usage\n    \n  \n  Using toc.js    \n      Customize with toc.js        \n          Use with this jekyll template\n        \n      \n      Basic Usage\n      How it would look like\n    \n  \n\n\nBasic Usage\n\nYou need to put this at the beginning of the page where you want the table of content to be displayed\n\n* TOC\n{:toc}\n\n\nIt will then render the markdown and html titles (lines that begins with # or using the &amp;lt;h1&amp;gt;&amp;lt;/h1&amp;gt; tages)\n\nUsing toc.js\n\nDemo display of jekyll-table-of-contents by ghiculescu.\n\n\n\n\nCustomize with toc.js\n\ntoc.js stands for table of content, it is a js plugin that generates automatically a table of content of a post.\n\nUse with this jekyll template\n\nIf you want to customize the theme it is up to you, you can add the toc.js file into the asset &amp;gt; js and add it into the page.html layout with:\n\n&amp;lt;script src=&quot;/assets/js/toc.js&quot; &amp;gt;&amp;lt;/script&amp;gt;\n\nThen you can use it as it is said on the repository.\n\nBasic Usage\n\nThe script requires jQuery. First, reference toc.js in templates where you would like to add the table of content. Then, create an HTML element wherever you want your table of contents to appear:\n\n&amp;lt;div id=&quot;toc&quot;&amp;gt;&amp;lt;/div&amp;gt;\n\n\nThen you put your post with titles and all like:\n\n## Title\n## Mid title 1\nThis is text on page one\n## Mid title 2\nThis is text for page two\n### Sub title 2.a\nSome more text\n\n\nThen at the end of your post, you call the .toc() function using:\n\n&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;\n$(document).ready(function() {\n    $(&#39;#toc&#39;).toc();\n});\n&amp;lt;/script&amp;gt;\n\n\nHow it would look like\n\nSo you can get a feel of it.\n\n\n\n\n\n\n\n\n"
} ,
  
  {
    "title"    : "Tech Stuff example",
    "category" : "",
    "tags"     : " Mermaid, Highlight, Markdown",
    "url"      : "/2013/11/02/Tech-stuff-example.html",
    "date"     : "November 2, 2013",
    "excerpt"  : "Because if you put some code in your blog, you would at least make it:\n\n\n  Searchable\n  Good-looking\n\n\nSearch on code\n\nSearch should be working even for complicated escape symbols.\n\nsed -i &#39;s/\\&quot;hostname\\&quot;\\:.*$/\\&quot;hostname\\&quot;\\: \\&quot;&#39;$IPADDR&#39;\\&quot;\\,/g&#39; ope...",
  "content"  : "Because if you put some code in your blog, you would at least make it:\n\n\n  Searchable\n  Good-looking\n\n\nSearch on code\n\nSearch should be working even for complicated escape symbols.\n\nsed -i &#39;s/\\&quot;hostname\\&quot;\\:.*$/\\&quot;hostname\\&quot;\\: \\&quot;&#39;$IPADDR&#39;\\&quot;\\,/g&#39; open-falcon/agent/config/cfg.json\n\n\nOr try searching for partial of a command, like this article should be returned when looking for “find grep”\n\nfind /etc -type f -exec cat &#39;{}&#39; \\; | tr -c &#39;.[:digit:]&#39; &#39;\\n&#39; | grep &#39;^[^.][^.]*\\.[^.][^.]*\\.[^.][^.]*\\.[^.][^.]*$&#39;\n\n\nCode highlighting examples\n\nBecause you might put code in your blog post, and you want to make sure it will look good in here.\nPlus that the search function will still be working!\n\nJava\n\njava example\n\nimport java.util.*;\n\n@Example\npublic class Demo {\n  private static final String CONSTANT = &quot;String&quot;;\n  private Object o;\n  /**\n   * Creates a new demo.\n   * @param o The object to demonstrate.\n   */\n  public Demo(Object o) {\n    this.o = o;\n    String s = CONSTANT + &quot;Other example of text&quot;;\n    int i = 123 - 33 % 11;\n  }\n  public static void main(String[] args) {\n    Demo demo = new Demo();\n    System.out.println(demo.o.toString())\n  }\n}\n\n\nHTML\n\nhtml example\n\n&amp;lt;!DOCTYPE html&amp;gt;\n&amp;lt;html lang=&quot;en&quot;&amp;gt;\n  &amp;lt;body&amp;gt;\n    &amp;lt;div class=&quot;content&quot;&amp;gt;\n        This is an example\n    &amp;lt;/div&amp;gt;\n  &amp;lt;/body&amp;gt;\n&amp;lt;/html&amp;gt;\n\n\nJavascript\n\n/**\n * Does a thing\n */\nfunction helloWorld(param1, param2) {\n  var something = 0;\n\n  // Do something\n  if (2.0 % 2 == something) {\n    console.log(&#39;Hello, world!&#39;);\n  } else {\n    return null;\n  }\n\n  // @TODO comment\n}\n\n\nPython\n\nimport os\n\ndef some_function(param_one=&quot;&quot;, param_two=0):\n    r&#39;&#39;&#39;A docstring&#39;&#39;&#39;\n    if param_one &amp;gt; param_two: # interesting\n        print(&quot;Greater&quot;)\n    return (param_two - param_one + 1 + 0b10) or None\n\nclass SomeClass:\n    &quot;&quot;&quot; dunno what I am doing &quot;&quot;&quot;\n    \n    def __init__(self):\n        pass\n\n\nYAML\n\nYou can also render some yaml, like this _config.yml:\n\n\n# Welcome to Jekyll!\n#\n# This config file is meant for settings that affect your whole blog, values\n# which you are expected to set up once and rarely edit after that. If you find\n# yourself editing this file very often, consider using Jekyll&#39;s data files\n# feature for the data you need to update frequently.\n#\n# This file, &quot;_config.yml&quot; is *NOT* reloaded automatically when you use\n# &#39;bundle exec jekyll serve&#39;. If you change this file, please restart the server process.\n\n# Site settings\n# These are used to personalize your new site. If you look in the HTML files,\n# you will see them accessed via Guo Yue Blog, , and so on.\n# You can create any custom variable you would like, and they will be accessible\n# in the templates via .\n\n# SITE CONFIGURATION\nbaseurl: &quot;/Type-on-Strap&quot;\nurl: &quot;https://sylhare.github.io&quot;\n\n# THEME-SPECIFIC CONFIGURATION\ntitle: Type on Strap                                    # site&#39;s title\ndescription: &quot;A website with blog posts and pages&quot;      # used by search engines\navatar: assets/img/triangle.png                         # Empty for no avatar in navbar\nfavicon: assets/favicon.ico                             # Icon displayed in the tab\n\nremote_theme: sylhare/Type-on-Strap                     # If using as a remote_theme in github\n\n\nMermaid\n\nDiagrams with mermaid.\n\nHere is a simple example using:\n\n&amp;lt;div class=&quot;mermaid&quot;&amp;gt;\nsequenceDiagram\n    Alice-&amp;gt;&amp;gt;John: Hello John, how are you?\n    John--&amp;gt;&amp;gt;Alice: Great!\n&amp;lt;/div&amp;gt;\n\n\nThat will be rendered into this:\n\n\n    \n    \n        \n    \n    \n\n\nYou can also go with more complex features and diagrams from the documentation:\n\n\nsequenceDiagram\n    participant Alice\n    participant Bob\n    Alice-&amp;gt;&amp;gt;John: Hello John, how are you?\n    loop Healthcheck\n        John-&amp;gt;&amp;gt;John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts prevail!\n    John--&amp;gt;&amp;gt;Alice: Great!\n    John-&amp;gt;&amp;gt;Bob: How about you?\n    Bob--&amp;gt;&amp;gt;John: Jolly good!\n\n"
} ,
  
  {
    "title"    : "Blogging with title ",
    "category" : "",
    "tags"     : " Test, Image",
    "url"      : "/2013/10/18/blogging-with-title.html",
    "date"     : "October 18, 2013",
    "excerpt"  : "I am a BIG title\n\nThis is a very tiny tiny post with less than 250 letters.\n\n",
  "content"  : "I am a BIG title\n\nThis is a very tiny tiny post with less than 250 letters.\n\n"
} 
  
  ,
  
  {
  
  "title"    : "学习宝(UI项目)",
  "category" : "",
  "tags"     : " ",
  "url"      : "/portfolio/xuexibao",
  "date"     : "May 1, 2016",
  "excerpt"  : "在校实习 UI设计\n\n学习宝是响应华南理工大学智慧教学计划而为华南理工大学开发的课堂辅助教学系统。\n\n基于Android实现了课堂在线直播、学生课后论坛、在线考试和教职人员与学生的在线管理等功能。\n\n由我负责设计安卓移动端整体UI。\n\n\n\n\n",
  "content"  : "在校实习 UI设计\n\n学习宝是响应华南理工大学智慧教学计划而为华南理工大学开发的课堂辅助教学系统。\n\n基于Android实现了课堂在线直播、学生课后论坛、在线考试和教职人员与学生的在线管理等功能。\n\n由我负责设计安卓移动端整体UI。\n\n\n\n\n"
  
} ,
  
  {
  
  "title"    : "飞行(UI项目)",
  "category" : "",
  "tags"     : " ",
  "url"      : "/portfolio/fly",
  "date"     : "June 1, 2017",
  "excerpt"  : "UI设计 交互设计\n\n飞行-空军管理系统是为南部战区某部设计的大型空军信息管理系统；\n\n涵盖机场管理、塔台调度、员工管理等数十个模块；\n\n由我独立负责项目UI设计工作，完成200+页面的设计、众多图标和控件的输出以及复杂交互的研究；\n\n\n\n\n\n\n\n\n",
  "content"  : "UI设计 交互设计\n\n飞行-空军管理系统是为南部战区某部设计的大型空军信息管理系统；\n\n涵盖机场管理、塔台调度、员工管理等数十个模块；\n\n由我独立负责项目UI设计工作，完成200+页面的设计、众多图标和控件的输出以及复杂交互的研究；\n\n\n\n\n\n\n\n\n"
  
} ,
  
  {
  
  "title"    : "笋尖",
  "category" : "",
  "tags"     : " ",
  "url"      : "/portfolio/sun",
  "date"     : "October 1, 2017",
  "excerpt"  : "前端开发 UI设计\n\n笋尖教育门户网站，是基于Vue为笋尖教育集团开发的教育培训机构门户网站。\n\n由我负责网站的WEB前端开发和UI设计工作。\n\n\n\n\n\n",
  "content"  : "前端开发 UI设计\n\n笋尖教育门户网站，是基于Vue为笋尖教育集团开发的教育培训机构门户网站。\n\n由我负责网站的WEB前端开发和UI设计工作。\n\n\n\n\n\n"
  
} ,
  
  {
  
  "title"    : "易约",
  "category" : "",
  "tags"     : " ",
  "url"      : "/portfolio/tongqi",
  "date"     : "May 1, 2020",
  "excerpt"  : "小程序 购票 打卡乘车 组件封装 实时定位\n\n易约巴士小程序是如约公司旗下的定制公交应用。\n\n该应用基于微信小程序解决了用户或集团定制日常通勤路线的痛点，实现了用户定制路线、买票、上车、定位车辆等需求的结合。\n\n由我负责小程序前端开发和版本发布工作。\n\n\n\n\n\n",
  "content"  : "小程序 购票 打卡乘车 组件封装 实时定位\n\n易约巴士小程序是如约公司旗下的定制公交应用。\n\n该应用基于微信小程序解决了用户或集团定制日常通勤路线的痛点，实现了用户定制路线、买票、上车、定位车辆等需求的结合。\n\n由我负责小程序前端开发和版本发布工作。\n\n\n\n\n\n"
  
} ,
  
  {
  
  "title"    : "重点营运车",
  "category" : "",
  "tags"     : " ",
  "url"      : "/portfolio/zeng",
  "date"     : "October 1, 2020",
  "excerpt"  : "前端开发 数据可视化 车辆管理 单点登录 大屏 小程序 Vue\n\n广州重点营运车，是为广州各区行政交管部门设计开发的多端重点营运车辆综合监管平台；涉及小程序、PC端、后台、移动端、大屏等不同平台，实现对出租车、危运车、驾培车等不同行业的业务覆盖；\n\n单点登录实现多平台权限管理\n\n\n小程序实现管理人员实时处理监控和司机实时响应反馈\n\n\n大屏实时将全区管理情况和车辆总体情况向指挥部呈现\n\n\nPC端管理系统全方位覆盖市管理人员和车辆营运公司业务范围\n\n",
  "content"  : "前端开发 数据可视化 车辆管理 单点登录 大屏 小程序 Vue\n\n广州重点营运车，是为广州各区行政交管部门设计开发的多端重点营运车辆综合监管平台；涉及小程序、PC端、后台、移动端、大屏等不同平台，实现对出租车、危运车、驾培车等不同行业的业务覆盖；\n\n单点登录实现多平台权限管理\n\n\n小程序实现管理人员实时处理监控和司机实时响应反馈\n\n\n大屏实时将全区管理情况和车辆总体情况向指挥部呈现\n\n\nPC端管理系统全方位覆盖市管理人员和车辆营运公司业务范围\n\n"
  
} ,
  
  {
  
  "title"    : "承压业务通",
  "category" : "",
  "tags"     : " ",
  "url"      : "/portfolio/chengya",
  "date"     : "June 1, 2021",
  "excerpt"  : "公众号 微信SDK IOS兼容 Vux\n\n为广东省承压测试院开发的考试及信息管理系统的移动端公众号项目，基于Vue.js结合Vux组件开发。目前已健康运行于广州承压微服务公众平台。\n\n\n",
  "content"  : "公众号 微信SDK IOS兼容 Vux\n\n为广东省承压测试院开发的考试及信息管理系统的移动端公众号项目，基于Vue.js结合Vux组件开发。目前已健康运行于广州承压微服务公众平台。\n\n\n"
  
} ,
  
  {
  
  "title"    : "三汽党建",
  "category" : "",
  "tags"     : " ",
  "url"      : "/portfolio/sanqi",
  "date"     : "June 2, 2021",
  "excerpt"  : "前端开发 数据可视化 响应式大屏 动画\n\n三汽党建项目，是以迎接中国共产党成立一百周年为契机为广州第三公共汽车公司开发的党支部党建管理项目。项目包含基于jeecg-boot定制的后台管理系统，管理人员端微信小程序，党组成员端公众号网页，和指挥中心现场大屏等。\n我参与pc端的开发工作；全权负责指挥中心大屏和小程序端开发，参与现场调试工作，解决屏幕自适应等问题。\n\n\n\n\n\n\n",
  "content"  : "前端开发 数据可视化 响应式大屏 动画\n\n三汽党建项目，是以迎接中国共产党成立一百周年为契机为广州第三公共汽车公司开发的党支部党建管理项目。项目包含基于jeecg-boot定制的后台管理系统，管理人员端微信小程序，党组成员端公众号网页，和指挥中心现场大屏等。\n我参与pc端的开发工作；全权负责指挥中心大屏和小程序端开发，参与现场调试工作，解决屏幕自适应等问题。\n\n\n\n\n\n\n"
  
} ,
  
  {
  
  "title"    : "佛山主动安全云",
  "category" : "",
  "tags"     : " ",
  "url"      : "/portfolio/foshan",
  "date"     : "June 9, 2021",
  "excerpt"  : "前端开发 车辆跟踪 实时监控 组件封装\n\n佛山主动安全云平台项目是为佛山交管部门开发的车辆安全管理系统。涉及车辆管理、安全告警、司机状态实时监控、主动安全告警、人员管理、数据报表等功能。\n\n该项目包含面向交管部门和企业管理人员的后台管理系统，以及移动端微信小程序。\n\n由我负责pc端和小程序端开发工作。\n\n\n\n\n\n\n",
  "content"  : "前端开发 车辆跟踪 实时监控 组件封装\n\n佛山主动安全云平台项目是为佛山交管部门开发的车辆安全管理系统。涉及车辆管理、安全告警、司机状态实时监控、主动安全告警、人员管理、数据报表等功能。\n\n该项目包含面向交管部门和企业管理人员的后台管理系统，以及移动端微信小程序。\n\n由我负责pc端和小程序端开发工作。\n\n\n\n\n\n\n"
  
} 
  
]
